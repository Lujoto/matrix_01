     1                                  ; subroutine to calc the length of strings
     2                                  section .data
     3 00000000 4865790A00                  msg  db  "Hey",10,0
     4 00000005 776861747320746861-         msg2 db  "whats that noise",10,0
     4 0000000E 74206E6F6973650A00 
     5                                  
     6                                  section .bss
     7                                  section .text
     8                                      global main
     9                                  main:
    10                                  
    11 00000000 48B8-                   mov rax, msg
    11 00000002 [0000000000000000] 
    12 0000000A E814000000              call _print
    13 0000000F 48B8-                   mov rax, msg2
    13 00000011 [0500000000000000] 
    14 00000019 E805000000              call _print
    15 0000001E E824000000              call ep
    16                                  
    17                                  
    18                                      ;input: rax as pointer to string
    19                                      ;output: print string at rax
    20                                  _print:
    21 00000023 50                          push rax        ; since there is no "ret" statement at the end of _print, 
    22 00000024 BB00000000                  mov rbx, 0      ; this function will continue into _printloop. 
    23                                                      ; use rbx to count the length of the string
    24                                                      ; 
    25                                  _printloop:
    26 00000029 48FFC0                      inc rax         ; increment rax to read next character
    27 0000002C 48FFC3                      inc rbx         ; increment rbx to account for the number of characters
    28                                  
    29 0000002F 8A08                        mov cl, [rax]  ; move into cl (8-bit equivalent of rcx) the contents? of rax
    30 00000031 80F900                      cmp cl, 0
    31 00000034 75F3                        jne _printloop ; if not equal, jump to _printloop
    32                                      
    33 00000036 B801000000                  mov rax, 1
    34 0000003B BF01000000                  mov rdi, 1
    35 00000040 5E                          pop rsi
    36 00000041 4889DA                      mov rdx, rbx
    37 00000044 0F05                        syscall
    38 00000046 C3                          ret
    39                                  
    40                                  ep:
    41 00000047 B83C000000                  mov rax, 60
    42 0000004C BF00000000                  mov rdi, 0
    43 00000051 0F05                        syscall
    44 00000053 C3                          ret
    45                                  
